type User {
  id: ID! @id
  username: String! @unique
  name: String!
  description: String
  website: String
  wechatProviderId: String
  coverPhoto: String
  profilePhoto: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  lastSeen: DateTime
  bannedAt: DateTime
  deletedAt: DateTime
}

type Community {
  id: ID! @id
  name: String!
  description: String!
  coverPhoto: String
  profilePhoto: String
  isPrivate: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  website: String
  tags: [String]
  deletedAt: DateTime
  memberCount: Int
}

type Channel {
  id: ID! @id
  communityId: ID!
  name: String!
  description: String
  isPrivate: Boolean! @default(value: false)
  isDefault: Boolean!
  memberCount: Int
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  archivedAt: DateTime
  deletedAt: DateTime
}

enum ThreadContentType {
  EDITORJS
}

type ThreadContent @embedded {
  title: String!
  body: String!
  type: ThreadContentType! @default(value: EDITORJS)
}

type Thread {
  id: ID! @id
  channelId: ID!
  communityId: ID!
  authorId: ID!
  content: ThreadContent!
  isPublished: Boolean! @default(value: false)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  lastActive: DateTime
}

enum UserCommunityStatus {
  PENDING,
  ACTIVE,
  BANNED
}

enum UserCommunityRole {
  OWNER,
  MODERATOR,
  MEMBER
}

type UserCommunity {
  id: ID! @id
  communityId: ID!
  userId: ID!
  status: UserCommunityStatus!
  role: UserCommunityRole!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}

enum UserChannelStatus {
  PENDING,
  ACTIVE,
  BANNED
}

enum UserChannelRole {
  OWNER,
  MODERATOR,
  MEMBER
}

type UserChannel {
  id: ID! @id
  channelId: ID!
  userId: ID!
  status: UserChannelStatus!
  role: UserChannelRole!
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
}
